name: Build
on: [push]
jobs:
  build-win:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Restore NuGet Packages
      run: nuget restore "CM Launcher.sln"

    - name: Build CML
      working-directory: ./Windows
      run: |
        dotnet build --configuration Release
        mv "bin/Release/CM Launcher.exe" "bin/Release/CML2.exe"

    - id: upload-file
      uses: google-github-actions/upload-cloud-storage@main
      with:
        credentials: ${{ secrets.gcp_credentials }}
        path: Windows/bin/Release/CML2.exe
        destination: chromapper
  build-osx:
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v2

    - uses: maxim-lobanov/setup-xamarin@v1
      with:
        mono-version: latest
        xamarin-mac-version: latest
        xcode-version: latest

    - name: Restore NuGet Packages
      run: nuget restore "CM Launcher.sln"

    - name: Build CML
      working-directory: ./OSX
      run: |
        msbuild /property:Configuration=Release
        mkdir -p zip
        mv bin/Release/CML.app zip/CML.app
        chmod +x zip/CML.app/Contents/MacOS/CML

    - uses: papeloto/action-zip@v1
      with:
        files: OSX/zip
        dest: CML2.app.zip

    - id: upload-file
      uses: actions/upload-artifact@v3
      with:
        Name: CML.app.zip
        path: CML2.app.zip
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Prepare Environment
      run: |
        sudo add-apt-repository -syn universe
        sudo apt-get update
        sudo apt-get install dotnet-sdk-6.0
          
    - name: Build CML
      working-directory: ./Linux
      run: |
        dotnet publish -c Release --sc -r linux-x64
    
    - id: upload-file
      uses: actions/upload-artifact@v3
      with:
        name: CML-Linux
        path: Linux/bin/Release/net6.0/linux-x64/publish/CML-Linux

  update-version:
    runs-on: ubuntu-latest
    needs: [build-osx, build-win, build-linux]
    steps:
    - uses: actions/checkout@v2

    - name: Write version file
      run: grep -Po 'APP_VERSION = \K[0-9]+' Shared/Config.cs | tr -d '\n' > cml2

    - id: upload-file
      uses: google-github-actions/upload-cloud-storage@main
      with:
        credentials: ${{ secrets.gcp_credentials }}
        path: cml2
        destination: chromapper
        gzip: false
